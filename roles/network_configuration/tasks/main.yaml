- name: Setup hostapd
  become: true
  vars:
    root_dir:
  when:
  - network_configuration['enabled'] == True
  - network_configuration['ap_config']['use_hostapd'] == True
  block:
  - name: Install hostpad
    ansible.builtin.package:
      name:
        - hostapd
        - systemd-networkd
      state: present

  - name: Setup config directories
    ansible.builtin.file:
      state: directory
      mode: '0755'
      path: "{{ item }}"
    loop:
      - "{{ root_dir }}/etc/hostapd"
      - "{{ root_dir }}/etc/systemd/system"
      - "{{ root_dir }}/etc/systemd/system/hostapd.service.d"
      - "{{ root_dir }}/etc/systemd/network"
      - "{{ root_dir }}/etc/NetworkManager/conf.d"

  - name: Update hostapd application configuration
    ansible.builtin.template:
      src: hostapd.conf.j2
      dest: "{{ root_dir }}/etc/hostapd/hostapd.conf"

  - name: Configure hostapd service
    ansible.builtin.systemd_service:
      name: hostapd
      masked: false

  - name: Update hostapd service configuration
    ansible.builtin.template:
      src: hostapd.service.j2
      dest: "{{ root_dir }}/etc/systemd/system/hostapd.service"

  - name: Update hostapd service override configuration
    ansible.builtin.template:
      src: hostapd.service.override.j2
      dest: "{{ root_dir }}/etc/systemd/system/hostapd.service.d/override.conf"

  - name: Configure network device
    ansible.builtin.template:
      src: network.j2
      dest: "{{ root_dir }}/etc/systemd/network/10-{{ network_configuration['ap_config']['wireless_config']['interface_name'] }}.network"

  - name: Add interface to unmanaged list
    ansible.builtin.copy:
      dest: "{{ root_dir }}/etc/NetworkManager/conf.d/unmanaged.conf"
      content: |
        [keyfile]
        unmanaged-devices=interface-name:{{ network_configuration['ap_config']['wireless_config']['interface_name'] }}

  - name: Reload systemd daemon
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: Reload systemd services
    ansible.builtin.systemd_service:
      name: {{ item.name }}
      enabled: {{ item.enabled }}
      masked: {{ item.masked }}
      state: restarted
    loop:
      - { name: systemd-networkd, enabled: true, masked: false }
      - { name: hostapd, enabled: true, masked: false }

- name: Setup NetworkManager
  when:
  - network_configuration['enabled'] == True
  - network_configuration['ap_config']['use_hostapd'] == False
  community.general.nmcli:
    type: wifi
    conn_name:
    ifname: "{{ network_configuration['ap_config']['wireless_config']['interface_name'] }}"
    ssid: "{{ network_configuration['ap_config']['ssid'] }}"
    wifi:
      band: "{{ network_configuration['ap_config']['wireless_config']['band'] }}"
      mode: ap
    autoconnect: true
    state: present
